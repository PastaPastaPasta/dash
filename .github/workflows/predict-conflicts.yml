name: "Check Potential Conflicts"
on:
  - pull_request_target
  - pull_request_review

permissions:
  contents: read
  pull-requests: write
  # Enforce other not needed permissions are off
  actions: none
  checks: none
  deployments: none
  issues: none
  packages: none
  repository-projects: none
  security-events: none
  statuses: none

jobs:
  main:
    runs-on: ubuntu-latest
    steps:
      - name: check for potential conflicts
        uses: PastaPastaPasta/potential-conflicts-checker-action@0.1.9
        with:
          ghToken: "${{ secrets.GITHUB_TOKEN }}"
        id: conflicts-check

      - name: validate potential conflicts
        run: echo $test && echo $conflicts && wget https://raw.githubusercontent.com/dashpay/dash/develop/.github/workflows/handle_potential_conflicts.py && pip3 install hjson && python3 handle_potential_conflicts.py "$conflicts"
#        env:
#          conflicts: ${{ steps.conflicts-check.outputs.conflicts }}

      - name: comment on PR if there are conflicting PRs
        if: steps.conflicts-check.outputs.conflictingPrs != ''
        uses: actions/github-script@v5
        with:
          script: |
            const prNumber = context.payload.pull_request.number;
            const conflictingPrs = `${{ steps.conflicts-check.outputs.conflictingPrs }}`;
            const comment = `Conflicting PRs: ${conflictingPrs}`;
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: prNumber,
              body: comment,
            });
          github-token: ${{ secrets.GITHUB_TOKEN }}
