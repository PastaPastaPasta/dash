name: CI

on:
  push:
  pull_request:

permissions:
  contents: read
  packages: write

env:
  DOCKER_DRIVER: overlay2
  FAST_MODE: false

jobs:
  builder-image:
    name: Builder Image
    runs-on: ubuntu-20.04
    outputs:
      repo: ${{ steps.set-repo.outputs.repo }}
      branch: ${{ steps.set-branch.outputs.branch }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Log in to GitHub Container Registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Set lowercase branch name
        id: set-branch
        run: echo "::set-output name=branch::$(echo ${GITHUB_REF##*/} | tr '[:upper:]' '[:lower:]')"

      - name: Set lowercase repository
        id: set-repo
        run: echo "::set-output name=repo::$(echo ${{ github.repository }} | tr '[:upper:]' '[:lower:]')"

      - name: Pull builder image
        run: |
          docker pull ghcr.io/${{ steps.set-repo.outputs.repo }}/builder-${{ steps.set-branch.outputs.branch }} || true
          docker pull ghcr.io/${{ steps.set-repo.outputs.repo }}/builder-develop || true

      - name: Build and push builder image
        run: |
          cd contrib/containers/ci
          docker build --cache-from ghcr.io/${{ steps.set-repo.outputs.repo }}/builder-${{ steps.set-branch.outputs.branch }} --cache-from ghcr.io/${{ steps.set-repo.outputs.repo }}/builder-develop -t ghcr.io/${{ steps.set-repo.outputs.repo }}/builder-${{ steps.set-branch.outputs.branch }} -f Dockerfile .
          docker push ghcr.io/${{ steps.set-repo.outputs.repo }}/builder-${{ steps.set-branch.outputs.branch }}

  build-depends:
    name: Build Dependencies
    runs-on: ubuntu-20.04
    needs: builder-image
    strategy:
      matrix:
        host:
          - arm-linux-gnueabihf
          - x86_64-w64-mingw32
          - x86_64-pc-linux-gnu
        include:
          - host: x86_64-pc-linux-gnu
            dep_opts: DEBUG=1
    container:
      image: ghcr.io/${{ needs.builder-image.outputs.repo }}/builder-${{ needs.builder-image.outputs.branch }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Build dependencies
        run: make -j$(nproc) -C depends HOST=${{ matrix.host }} ${{ matrix.dep_opts || '' }}

  build:
    name: Build
    runs-on: ubuntu-20.04
    needs: build-depends
    strategy:
      matrix:
        build_target:
          - arm-linux
          - win64
          - linux64
    container:
      image: ghcr.io/${{ needs.builder-image.outputs.repo }}/builder-${{ needs.builder-image.outputs.branch }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup environment
        run: |
          export CACHE_DIR=$GITHUB_WORKSPACE/cache
          echo BUILD_TARGET=${{ matrix.build_target }}
          source ./ci/dash/matrix.sh

      - name: Build source
        run: ./ci/dash/build_src.sh

      - name: Run unit tests
        run: ./ci/dash/test_unittests.sh

  test:
    name: Test
    runs-on: ubuntu-20.04
    needs: build
    strategy:
      matrix:
        build_target:
          - linux64
    container:
      image: ghcr.io/${{ needs.builder-image.outputs.repo }}/builder-${{ needs.builder-image.outputs.branch }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup environment
        run: |
          export CACHE_DIR=$GITHUB_WORKSPACE/cache
          echo BUILD_TARGET=${{ matrix.build_target }}
          source ./ci/dash/matrix.sh

      - name: Run integration tests
        run: ./ci/dash/test_integrationtests.sh --extended --exclude feature_pruning,feature_dbcrash